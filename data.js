module.exports = [
  {
    "htmlContent": "<h1 id=\"mcetoc_1he0ku5our\" style=\"text-align: center;\"><span style=\"text-decoration: underline; font-family: 'trebuchet ms', geneva, sans-serif;\"><span style=\"color: rgb(224, 62, 45); text-decoration: underline;\"><strong>How To Create a Basic Next.JS App With TinyMCE </strong></span></span></h1>\n<h1 id=\"mcetoc_1he0ku5ous\" style=\"text-align: center;\"><span style=\"text-decoration: underline; font-family: 'trebuchet ms', geneva, sans-serif;\"><span style=\"color: rgb(224, 62, 45); text-decoration: underline;\"><strong>Integrated into the Web&nbsp;Application:</strong></span></span></h1>\n<p>&nbsp;</p>\n<blockquote>\n<p style=\"text-align: center;\"><em><span style=\"font-family: terminal, monaco, monospace; color: rgb(224, 62, 45);\">\" A Great man once said that nothing is too difficult. Somethings just take more time and effort. </span></em></p>\n<p style=\"text-align: center;\"><em><span style=\"font-family: terminal, monaco, monospace; color: rgb(224, 62, 45);\">Be persistent. Be patient.\"</span></em></p>\n</blockquote>\n<p>&nbsp;</p>\n<p style=\"text-align: justify;\"><span style=\"color: rgb(126, 140, 141);\"><strong><span style=\"font-family: 'trebuchet ms', geneva, sans-serif;\">This Tutorial is written keeping in mind mainly the beginners, who are just getting started with Next JS and want to make use of Rich Text Editing libraries like TinyMCE. TinyMCE is just one of the many npm packages available out there for providing rich-text editing capabilities to users. TinyMCE provides you with a sleek but powerful WYSIWYG Editor that allows you to edit and preview visually rich and pleasing content.</span></strong></span></p>\n<p style=\"text-align: justify;\">&nbsp;</p>\n<div class=\"mce-toc\">\n<h2><span style=\"font-family: tahoma, arial, helvetica, sans-serif; color: rgb(52, 73, 94);\">Table of Contents</span></h2>\n<ul>\n<li><a href=\"#mcetoc_1he0ku5our\">How To Create a Basic Next.JS App With TinyMCE</a></li>\n<li><a href=\"#mcetoc_1he0ku5ous\">Integrated into the Web&nbsp;Application:</a></li>\n</ul>\n</div>\n<p style=\"text-align: justify;\"><span style=\"color: rgb(126, 140, 141);\"><strong><span style=\"font-family: 'trebuchet ms', geneva, sans-serif;\">The rest of the&nbsp;article is divided into following sections,</span></strong></span></p>\n<ol>\n<li style=\"text-align: justify; color: rgb(52, 73, 94);\"><span style=\"color: rgb(52, 73, 94);\"><strong><span style=\"font-family: 'trebuchet ms', geneva, sans-serif;\">&nbsp;Creating a React App</span></strong></span></li>\n<li style=\"text-align: justify; color: rgb(52, 73, 94);\"><span style=\"color: rgb(52, 73, 94);\"><strong><span style=\"font-family: 'trebuchet ms', geneva, sans-serif;\">&nbsp;Installing TinyMCE package using npm</span></strong></span></li>\n<li style=\"text-align: justify; color: rgb(52, 73, 94);\"><span style=\"color: rgb(52, 73, 94);\"><strong><span style=\"font-family: 'trebuchet ms', geneva, sans-serif;\">&nbsp;Setting up the Tiny Editor for Editing</span></strong></span></li>\n<li style=\"text-align: justify; color: rgb(52, 73, 94);\"><span style=\"color: rgb(52, 73, 94);\"><strong><span style=\"font-family: 'trebuchet ms', geneva, sans-serif;\">&nbsp;Customising the Tiny Editor using props&nbsp;</span></strong></span></li>\n<li style=\"text-align: justify; color: rgb(52, 73, 94);\"><span style=\"color: rgb(52, 73, 94);\"><strong><span style=\"font-family: 'trebuchet ms', geneva, sans-serif;\">&nbsp;Getting contents of the Tiny Editor</span></strong></span></li>\n<li style=\"text-align: justify; color: rgb(52, 73, 94);\"><span style=\"color: rgb(52, 73, 94);\"><strong><span style=\"font-family: 'trebuchet ms', geneva, sans-serif;\">&nbsp;Storing the Tiny Editor content in application's state</span></strong></span></li>\n<li style=\"text-align: justify; color: rgb(52, 73, 94);\"><span style=\"color: rgb(52, 73, 94);\"><strong><span style=\"font-family: 'trebuchet ms', geneva, sans-serif;\">&nbsp;Making post request to external api to store the document&nbsp;</span></strong></span></li>\n<li style=\"text-align: justify; color: rgb(52, 73, 94);\"><span style=\"color: rgb(52, 73, 94);\"><strong><span style=\"font-family: 'trebuchet ms', geneva, sans-serif;\">&nbsp;Fetching the document and Displaying it inside the Tiny Editor.</span></strong></span></li>\n</ol>\n<p style=\"text-align: justify;\">&nbsp;</p>\n<h3><span style=\"color: rgb(52, 73, 94); font-size: 24pt;\"><strong><span style=\"font-family: 'trebuchet ms', geneva, sans-serif;\">1. <span style=\"text-decoration: underline;\">Creating a React App:</span></span></strong></span></h3>\n<p style=\"text-align: justify;\"><strong><span style=\"color: rgb(126, 140, 141);\"><span style=\"font-family: 'trebuchet ms', geneva, sans-serif;\">First create your Next.js app by using the command:&nbsp;</span></span></strong></p>\n<pre class=\"language-javascript\"><code>npx create-next-app@latest</code></pre>\n<p>&nbsp;</p>\n<p><strong><span style=\"color: rgb(126, 140, 141);\"><span style=\"font-family: 'trebuchet ms', geneva, sans-serif;\">Then, install TinyMCE package using npm package manager by using this command:&nbsp;</span></span></strong></p>\n<pre class=\"language-javascript\"><code>npm install @tinymce/tinymce-react</code></pre>\n<p>&nbsp;</p>\n<p><strong><span style=\"color: rgb(126, 140, 141);\"><span style=\"font-family: 'trebuchet ms', geneva, sans-serif;\">Create another folder inside the app directory called&nbsp;<span style=\"color: rgb(52, 73, 94); font-family: 'courier new', courier, monospace;\">'</span></span></span><span style=\"color: rgb(52, 73, 94); font-family: 'courier new', courier, monospace;\">newPages'<span style=\"font-family: 'trebuchet ms', geneva, sans-serif; color: rgb(126, 140, 141);\">, as shown below:</span></span></strong></p>\n<pre class=\"language-markup\"><code>mkdir ./app/newPages</code></pre>\n<p>&nbsp;</p>\n<p>Here is an Image of the folder structure as viewed in VSCode:&nbsp; (requires JWT token)</p>",
    "textOnlyContent": "How To Create a Basic Next.JS App With TinyMCE\nIntegrated into the Web Application:\n\n\n\n\" A Great man once said that nothing is too difficult. Somethings just take more time and effort.\n\nBe persistent. Be patient.\"\n\n\n\nThis Tutorial is written keeping in mind mainly the beginners, who are just getting started with Next JS and want to make use of Rich Text Editing libraries like TinyMCE. TinyMCE is just one of the many npm packages available out there for providing rich-text editing capabilities to users. TinyMCE provides you with a sleek but powerful WYSIWYG Editor that allows you to edit and preview visually rich and pleasing content.\n\n\n\nTable of Contents\nHow To Create a Basic Next.JS App With TinyMCE\nIntegrated into the Web Application:\n\nThe rest of the article is divided into following sections,\n\n Creating a React App\n Installing TinyMCE package using npm\n Setting up the Tiny Editor for Editing\n Customising the Tiny Editor using props \n Getting contents of the Tiny Editor\n Storing the Tiny Editor content in application's state\n Making post request to external api to store the document \n Fetching the document and Displaying it inside the Tiny Editor.\n\n\n\n1. Creating a React App:\n\nFirst create your Next.js app by using the command: \n\nnpx create-next-app@latest\n\n\n\nThen, install TinyMCE package using npm package manager by using this command: \n\nnpm install @tinymce/tinymce-react\n\n\n\nCreate another folder inside the app directory called 'newPages', as shown below:\n\nmkdir ./app/newPages\n\n\n\nHere is an Image of the folder structure as viewed in VSCode:  (requires JWT token)",
    "id": 1
  }
]